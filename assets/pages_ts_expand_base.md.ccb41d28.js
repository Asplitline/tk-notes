import{_ as s,c as a,o as n,a as l}from"./app.007766eb.js";const C=JSON.parse('{"title":"TS 基础应用","description":"","frontmatter":{"title":"TS 基础应用","order":1},"headers":[{"level":2,"title":"ts - 2349","slug":"ts-2349","link":"#ts-2349","children":[]}],"relativePath":"pages/ts/expand/base.md","lastUpdated":1673195235000}'),o={name:"pages/ts/expand/base.md"},e=l(`<h1 id="ts-基础应用" tabindex="-1">TS 基础应用 <a class="header-anchor" href="#ts-基础应用" aria-hidden="true">#</a></h1><h2 id="ts-2349" tabindex="-1">ts - 2349 <a class="header-anchor" href="#ts-2349" aria-hidden="true">#</a></h2><p>错误复现伪代码</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useBoolean</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ***</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span><span style="color:#A6ACCD;">isBoolean</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">exchangeBoolean</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">isBoolean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> exchangeBoolean</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useBoolean</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">exchangeBoolean</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// error : This expression is not callable.Not all constituents of type &#39;Ref&lt;boolean&gt; | ((payload?: boolean | undefined) =&gt; void)&#39; are callable.ts(2349)</span></span>
<span class="line"></span></code></pre></div><p>分析：返回的是一个复合类型的数组，类型是里面元素类型的集合，不是所有类型都能函数调用，需要把类型锁定。 解决：通过 const 断言</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useBoolean</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// ***</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span><span style="color:#A6ACCD;">isBoolean</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">exchangeBoolean</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,6),p=[e];function t(c,r,i,y,D,F){return n(),a("div",null,p)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
