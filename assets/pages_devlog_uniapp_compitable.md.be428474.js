import{_ as s,c as a,o as l,a as n}from"./app.2e3c7667.js";const C=JSON.parse('{"title":"兼容性问题","description":"","frontmatter":{"title":"兼容性问题","order":4},"headers":[{"level":2,"title":"微信兼容性","slug":"微信兼容性","link":"#微信兼容性","children":[{"level":3,"title":"自定义组件不支持动态 class","slug":"自定义组件不支持动态-class","link":"#自定义组件不支持动态-class","children":[]},{"level":3,"title":"动态 style 只能为 string","slug":"动态-style-只能为-string","link":"#动态-style-只能为-string","children":[]},{"level":3,"title":"不支持作用域插槽","slug":"不支持作用域插槽","link":"#不支持作用域插槽","children":[]},{"level":3,"title":"不支持自定义 v-model","slug":"不支持自定义-v-model","link":"#不支持自定义-v-model","children":[]},{"level":3,"title":"不支持 $attrs 和 $listeners","slug":"不支持-attrs-和-listeners","link":"#不支持-attrs-和-listeners","children":[]}]}],"relativePath":"pages/devlog/uniapp/compitable.md","lastUpdated":1670431171000}'),p={name:"pages/devlog/uniapp/compitable.md"},o=n(`<h1 id="兼容性问题" tabindex="-1">兼容性问题 <a class="header-anchor" href="#兼容性问题" aria-hidden="true">#</a></h1><h2 id="微信兼容性" tabindex="-1">微信兼容性 <a class="header-anchor" href="#微信兼容性" aria-hidden="true">#</a></h2><p>目前发现</p><ol><li>自定义组件不支持动态 class</li><li>动态 style 只能为 string</li><li>不支持作用域插槽</li><li>不支持自定义 v-model</li><li>不支持 $attrs 和 $listeners</li><li>...</li></ol><h3 id="自定义组件不支持动态-class" tabindex="-1">自定义组件不支持动态 class <a class="header-anchor" href="#自定义组件不支持动态-class" aria-hidden="true">#</a></h3><p>解决：新增 props className 来接收 class</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">className</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">slot</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">view</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">className</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> String</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="动态-style-只能为-string" tabindex="-1">动态 style 只能为 string <a class="header-anchor" href="#动态-style-只能为-string" aria-hidden="true">#</a></h3><p>解决：通过正则转换</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> style </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">font-size</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">12px</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">styleObj2StyleStr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">{</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">styleObj2StyleStr</span><span style="color:#A6ACCD;">(style)</span></span>
<span class="line"></span></code></pre></div><blockquote><p>todo: style 属性支持 fontSize</p></blockquote><h3 id="不支持作用域插槽" tabindex="-1">不支持作用域插槽 <a class="header-anchor" href="#不支持作用域插槽" aria-hidden="true">#</a></h3><p>解决：传值到父组件 or 组件内部处理好，不支持作用域插槽</p><h3 id="不支持自定义-v-model" tabindex="-1">不支持自定义 v-model <a class="header-anchor" href="#不支持自定义-v-model" aria-hidden="true">#</a></h3><p>解决：通过 .sync 修饰符代替</p><h3 id="不支持-attrs-和-listeners" tabindex="-1">不支持 $attrs 和 $listeners <a class="header-anchor" href="#不支持-attrs-和-listeners" aria-hidden="true">#</a></h3><p>解决：通过 props 手动传值</p>`,17),e=[o];function t(r,c,D,F,y,i){return l(),a("div",null,e)}const A=s(p,[["render",t]]);export{C as __pageData,A as default};
